AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Sample Template:
  This template creates a security configuration and launches a kerberized
  Amazon EMR cluster with Apache Ranger integration for authorization.
  **WARNING** You will be billed for the AWS resources used if you create a
  stack from this template.'
Parameters:
  VPC:
    Description: Select the Virtual Private Cloud (VPC) previously created
    Type: AWS::EC2::VPC::Id
  PrivateSubnet1AID:
    Description: ID of an existing private subnet
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2AID:
    Description: ID of an existing private subnet
    Type: AWS::EC2::Subnet::Id
  PublicSubnet1AID:
    Description: ID of an existing public subnet
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2AID:
    Description: ID of an existing public subnet
    Type: AWS::EC2::Subnet::Id

  KeyPairName:
    Description: Name of an existing EC2 key pair to access the Amazon EMR cluster and the Ranger Admin server
    Type: AWS::EC2::KeyPair::KeyName

  LDAPHostPrivateIP:
    Description: IP Address or hostname of the LDAP server
    Type: String
  LDAPBindUserName:
    Description: LDAP Bind user used by Ranger to perfom search queries on the LDAP
    Type: String
    Default: binduser
    AllowedValues:
      - binduser
  LDAPBindPassword:
    Description: Ldap Bind user password that was used in the previous cloud formation
      template
    Type: String
    NoEcho: 'true'

  LDAPSearchBase:
    Description: Ldap search base
    Type: String
    Default: CN=Users,DC=awsemr,DC=com
    AllowedValues:
      - CN=Users,DC=awsemr,DC=com
  LDAPUserSearchAttribute:
    Description: Ldap user search attribute
    Type: String
    Default: sAMAccountName
    AllowedValues:
      - sAMAccountName
  LDAPUserObjectClass:
    Description: Ldap user object class
    Type: String
    Default: person
    AllowedValues:
      - person
  LDAPGroupSearchBase:
    Description: Ldap group search
    Type: String
    Default: dc=awsemr,dc=com
    AllowedValues:
      - dc=awsemr,dc=com
  LDAPGroupObjectClass:
    Description: Ldap group object class
    Type: String
    Default: group
    AllowedValues:
      - group
  LDAPMemberAttribute:
    Description: Ldap member attribute
    Type: String
    Default: member
    AllowedValues:
      - member

  DomainDNSName:
    AllowedPattern: '[a-zA-Z0-9\-]+\..+'
    Default: awsemr.com
    Description: The Active Directory domain that you want to establish the cross-realm
      trust with e.g., awsemr.com
    MaxLength: '25'
    MinLength: '3'
    Type: String
    AllowedValues: ["awsemr.com"]
  DomainAdminUser:
    AllowedPattern: '[a-zA-Z0-9]*'
    Default: awsadmin
    AllowedValues: ["awsadmin"]
    Description: User name of an Active Directory account with computer join privileges
    MaxLength: '25'
    MinLength: '5'
    Type: String
  DomainAdminPassword:
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    Description: Password for the domain admin user. Must be at least 8 characters
      containing letters, numbers and symbols
    MaxLength: '32'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  CrossRealmTrustPrincipalPassword:
    Description: Password of your cross-realm trust (Should be the sames used in the previous Stack - Step1)
    MaxLength: '32'
    MinLength: '5'
    NoEcho: 'true'
    Type: String
  ADDomainJoinPassword:
    Description: Password of the domain admin (joiner user) account (Should be the sames used in the previous Stack - Step1)
    NoEcho: 'true'
    Type: String
  KdcAdminPassword:
    Description: Password of your KDC Server runing on the EMR Master Node
    MaxLength: '32'
    MinLength: '5'
    NoEcho: 'true'
    Type: String

  DBUserName:
    Description: The RDS MySQL database username
    Type: String
    Default: root
    AllowedValues:
      - root
  DBRootPassword:
    Description: The RDS MySQL database password (Should be the sames used in the previous Stack - Step1)
    MaxLength: '41'
    MinLength: '8'
    NoEcho: 'true'
    Type: String

  InstallEMRRangerinPublicSubnet:
    Description: Flag to indicate if Ranger and EMR servers should be run in the Public subnet
    Default: false
    Type: String
    AllowedValues: [true, false]
  AttachAdditionalSourcePrefixToSG:
    Description: (Optional) Attaches additional sources prefix lists to EMR Master Security Group
    Default: false
    Type: String
    AllowedValues: [true, false]
  CIDRAccessToPrivateSubnetResources:
    Description: IP address range (in CIDR notation) of the client that will be allowed
      to connect to the cluster using SSH e.g., 203.0.113.5/32
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.0.0/16
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x
  AdditionalSourcePrefixToSG:
    Description: (Optional) Sources that are allowd to access the Ranger Instance. Should be a source prefix
      e.g., pl-xxx
    Type: String
  NumberOfAZs:
    Type: String
    AllowedValues: ["2", "3"]
    Default: "3"
    Description: Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.

  MasterInstanceType:
    Description: Instance type for the cluster nodes
    Type: String
    Default: r5.2xlarge
    AllowedValues:
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - r5.2xlarge
  CoreInstanceType:
    Description: Instance type for the cluster nodes
    Type: String
    Default: r5.2xlarge
    AllowedValues:
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - r5.2xlarge
  RangerInstanceType:
    Default: m5.xlarge
    Description: Instance Type of the core node
    Type: String
    AllowedValues:
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
  EMRClusterName:
    Default: EMR-EMRSecurityWithRangerGA
    Description: Cluster name for the EMR
    Type: String
  EMRLogDir:
    Description: 'Log Dir for the EMR cluster. Eg: s3://xxx'
    Type: String
    AllowedPattern: ^s3://.*
    Default: s3://anubi-us-east-1/logs/

  KerberosADdomain:
    AllowedPattern: '[a-zA-Z0-9\-]+\..+'
    Default: AWSEMR.COM
    AllowedValues: ["AWSEMR.COM"]
    Description: The AD domain that you want to trust. This is the same as the AD
      domain name, but in uppercase letters e.g., AWSEMR.COM
    MaxLength: '25'
    MinLength: '3'
    Type: String
  MasterInstanceCount:
    Default: '1'
    Description: Number of master instances
    Type: Number
  CoreInstanceCount:
    Default: 3
    Description: Number of instances (core nodes) for the cluster e.g., 2
    Type: Number

  RangerVersion:
    Description: 'RangerVersion. Expected values are : 0.6,0.7,1.0,2.0. NOTE: Use Ranger 0.6 if
      EMR version is 5.0'
    AllowedValues:
      - '2.0'
    Type: String
    Default: '2.0'
  RangerHttpProtocol:
    Description: Ranger HTTP protocol
    Type: String
    Default: 'https'
    AllowedValues:
      - 'https'
  AppsEMR:
    Description: 'Comma separated list of applications to install on the cluster e.g., '
    Type: String
    Default: Hadoop, Spark, Hive, Livy, Hue
    AllowedValues: ["Hadoop, Spark, Hive, Livy, Hue"]
  EnableKerberos:
    Description: Enable Kerberos on the Cluster. This is Required for Ranger EMR support
    Default: true
    Type: String
    AllowedValues: [true]
  emrReleaseLabel:
    Type: String
    Default: emr-5.32.0
    AllowedValues:
      - emr-5.32.0
      - emr-6.3.0
  S3Bucket:
    Description: S3Bucket for the code [update this is you want to run this stack in a region other than US-EAST-1]
    Type: String
    Default: anubi-us-east-1
  S3Key:
    Description: S3Key of the code [update this is you want to run this stack in a region other than US-EAST-1]
    Type: String
    Default: artifacts/aws-blog-emr-ranger
  S3ArtifactBucket:
    Description: S3Bucket where artifacts are stored
    Type: String
    Default: anubi-us-east-1
    AllowedValues:
      - 'anubi-us-east-1'
      - 'aws-bigdata-blog'
  S3ArtifactKey:
    Description: S3Key of the Lambda code
    Type: String
    Default: 'artifacts/aws-blog-emr-ranger'
    AllowedValues:
      - 'artifacts/aws-blog-emr-ranger'
  ProjectVersion:
    Default: 3.0
    Description: Project version
    Type: String
    AllowedValues:
      - 3.0
      - beta

  RangerAdminPassword:
    Description: Password of the Ranger Admin server
    NoEcho: 'true'
    Default: admin
    Type: String
    AllowedValues: ["admin"]
  CreateNonEMRResources:
    Description: Only Install EMR cluster, Other resources which might have been created with previous stacks will be ignored. Eg- CloudWatch Log Groups
                 Allows you to re-run the same stack multiple times.
    Default: true
    Type: String
    AllowedValues: [true, false]
  RangerAgentKeySecretName:
    Description: Name of Ranger Agent Cert Secrets mgr resource
    Type: String
    Default: emr/rangerGAagentkey
    AllowedValues: ["emr/rangerGAagentkey"]
  RangerServerCertSecretName:
    Description: Name of Ranger Server Cert Secrets mgr resource
    Type: String
    Default: emr/rangerGAservercert
    AllowedValues: ["emr/rangerGAservercert"]
  GlueDataCatalogIntegration:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: (Preview) When true, enable the Glue data catalog integration for Hive and Spark
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Artifact Repository
        Parameters:
          - S3ArtifactBucket
          - S3ArtifactKey
          - S3Bucket
          - S3Key
          - ProjectVersion

      - Label:
          default: Required Fields (others can be kept as default)
        Parameters:
          - VPC
          - PublicSubnet1AID
          - PublicSubnet2AID
          - PrivateSubnet1AID
          - PrivateSubnet2AID
          - KeyPairName
          - LDAPHostPrivateIP
          - LDAPBindUserName
          - LDAPBindPassword
          - DomainAdminUser
          - DomainAdminPassword
          - KdcAdminPassword
          - CrossRealmTrustPrincipalPassword
          - ADDomainJoinPassword
          - DBUserName
          - DBRootPassword

      - Label:
          default: (Optional) EMR Cluster
        Parameters:
          - EMRClusterName
          - emrReleaseLabel
          - AppsEMR
          - MasterInstanceType
          - MasterInstanceCount
          - CoreInstanceType
          - CoreInstanceCount
          - EnableKerberos
          - EMRLogDir
          - GlueDataCatalogIntegration

      - Label:
          default: (Optional) Ranger Admin Server
        Parameters:
          - RangerVersion
          - RangerInstanceType
          - RangerAdminPassword
          - RangerHttpProtocol
          - RangerAgentKeySecretName
          - RangerServerCertSecretName

      - Label:
          default: (Optional) LDAP / Kerberos
        Parameters:
          - DomainDNSName
          - KerberosADdomain
          - LDAPGroupObjectClass
          - LDAPGroupSearchBase
          - LDAPMemberAttribute
          - LDAPSearchBase
          - LDAPUserObjectClass
          - LDAPUserSearchAttribute

    ParameterLabels:
      S3Bucket:
        default: 'Bucket Name'
      S3Key:
        default: 'Bucket Prefix'
      ProjectVersion:
        default: 'Template Version'

      VPC:
        default: 'Vpc Id'
      PublicSubnet1AID:
        default: 'Public Subnet One'
      PublicSubnet2AID:
        default: 'Public Subnet Two'
      PrivateSubnet1AID:
        default: 'Private Subnet One'
      PrivateSubnet2AID:
        default: 'Private Subnet Two'
      KeyPairName:
        default: 'SSH Key Name'
      LDAPHostPrivateIP:
        default: 'LDAP Hostname'
      DomainDNSName:
        default: 'LDAP Domain'
      LDAPBindUserName:
        default: 'LDAP Bind User'
      LDAPBindPassword:
        default: 'LDAP Bind User Password'
      LDAPSearchBase:
        default: 'LDAP Search Base Directory'

      DBUserName:
        default: 'Database Admin User'
      DBRootPassword:
        default: 'Database Admin Password'

      DomainAdminUser:
        default: 'Domain Admin User'
      DomainAdminPassword:
        default: 'Domain Admin Password'
      CrossRealmTrustPrincipalPassword:
        default: 'CrossRealm Trust Principal Password'
      KdcAdminPassword:
        default: 'KDC Admin Password'


      EMRClusterName:
        default: 'Cluster Name'
      emrReleaseLabel:
        default: 'Release'
      AppsEMR:
        default: 'Applications'
      MasterInstanceType:
        default: 'MASTER Instance Type'
      MasterInstanceCount:
        default: 'MASTER Instance Count'
      CoreInstanceType:
        default: 'CORE Instance Type'
      CoreInstanceCount:
        default: 'CORE Instance Count'
      EnableKerberos:
        default: 'Enable Kerberos'
      EMRLogDir:
        default: 'S3 Logging Path'
      GlueDataCatalogIntegration:
        default: '(Preview) Glue Data Catalog Integration'

      RangerAdminPassword:
        default: 'Ranger Admin Password'
      RangerInstanceType:
        default: 'Instance Type'
      RangerHttpProtocol:
        default: 'Ranger Admin UI Protocol'
      RangerAgentKeySecretName:
        default: 'Ranger Agent Certificate - Secret Name'
      RangerServerCertSecretName:
        default: 'Ranger Admin Server Certificate - Secret Name'
      RangerVersion:
        default: 'Ranger Version'

      CIDRAccessToPrivateSubnetResources:
        default: 'Clients CIDR'
      AttachAdditionalSourcePrefixToSG:
        default: 'Attach Additional Source Prefix'
      AdditionalSourcePrefixToSG:
        default: 'Additional Source Prefix'


Conditions:
  USEastRegion: !Equals [ !Ref 'AWS::Region', "us-east-1" ]
  EnableKerberos: !Equals [true, !Ref EnableKerberos]
  3AZDeployment: !Equals [!Ref NumberOfAZs, "3"]
  2AZDeployment: !Or
    - !Equals [!Ref NumberOfAZs, "2"]
    - !Equals [!Ref NumberOfAZs, "3"]
  InstallEMRRangerinPublicSubnet: !Equals [true, !Ref InstallEMRRangerinPublicSubnet]
Resources:
  RDSDatabase:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${S3ArtifactBucket}/${S3ArtifactKey}/${ProjectVersion}/cloudformation/rds-database.template'
      Parameters:
        Subnet1: !Ref 'PrivateSubnet1AID'
        Subnet2: !If
          - 2AZDeployment
          - !Ref 'PrivateSubnet2AID'
          - !Ref AWS::NoValue
        VPC: !Ref VPC
        MySQLDBPassword: !Ref DBRootPassword
        MySQLDBUserName: !Ref DBUserName
  RangerServer:
    DependsOn:
      - RDSDatabase
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${S3ArtifactBucket}/${S3ArtifactKey}/${ProjectVersion}/cloudformation/ranger-server.template'
      Parameters:
        S3Bucket: !Ref 'S3ArtifactBucket'
        S3Key: !Ref 'S3ArtifactKey'
        VPC: !Ref VPC
        Subnet1: !If [ InstallEMRRangerinPublicSubnet, !Ref PublicSubnet1AID, !Ref PrivateSubnet1AID ]
        Subnet2: !If [ InstallEMRRangerinPublicSubnet, !Ref PublicSubnet2AID, !Ref PrivateSubnet2AID ]
        DBHostName: !GetAtt 'RDSDatabase.Outputs.RDSInstanceAddress'
        DBRootPassword: !Ref DBRootPassword
        LDAPHostPrivateIP: !Ref LDAPHostPrivateIP
        DomainDNSName: !Ref DomainDNSName
        LDAPSearchBase: "dc=awsemr,dc=com"
        LDAPBindUserName: !Ref 'LDAPBindUserName'
        LDAPBindPassword: !Ref 'LDAPBindPassword'
        rangerVersion: !Ref RangerVersion
        KeyPairName: !Ref KeyPairName
        AttachAdditionalSourcePrefixToSG: !Ref AttachAdditionalSourcePrefixToSG
        CIDRAccessToPrivateSubnetResources: !Ref CIDRAccessToPrivateSubnetResources
        AdditionalSourcePrefixToSG: !Ref AdditionalSourcePrefixToSG
  EMRCluster:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - RangerServer
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${S3ArtifactBucket}/${S3ArtifactKey}/${ProjectVersion}/cloudformation/emr-template.template'
      Parameters:
        S3ArtifactBucket: !Ref 'S3ArtifactBucket'
        S3ArtifactKey: !Ref 'S3ArtifactKey'
        AppsEMR: !Ref 'AppsEMR'
        VPC: !Ref VPC
        emrReleaseLabel: !Ref emrReleaseLabel
        CreateNonEMRResources: !Ref CreateNonEMRResources
        ClusterSubnetID: !If [ InstallEMRRangerinPublicSubnet, !Ref PublicSubnet1AID, !Ref PrivateSubnet1AID ]
        EMRLogDir: !Ref EMRLogDir
        MasterInstanceCount: !Ref 'MasterInstanceCount'
        CoreInstanceCount: !Ref 'CoreInstanceCount'
        MasterInstanceType: !Ref 'MasterInstanceType'
        CoreInstanceType: !Ref 'CoreInstanceType'
        KeyPairName: !Ref 'KeyPairName'
        CrossRealmTrustPrincipalPassword: !Ref 'CrossRealmTrustPrincipalPassword'
        KdcAdminPassword: !Ref 'KdcAdminPassword'
        ADDomainJoinPassword: !Ref 'ADDomainJoinPassword'
        DomainAdminUser: !Ref 'DomainAdminUser'
        DomainDNSName: !Ref 'DomainDNSName'
        LDAPHostPrivateIP: !Ref 'LDAPHostPrivateIP'
        LDAPBindUserName: !Ref 'LDAPBindUserName'
        LDAPBindPassword: !Ref 'LDAPBindPassword'
        LDAPSearchBase: !Ref 'LDAPSearchBase'
        LDAPGroupSearchBase: !Ref 'LDAPGroupSearchBase'
        RangerHostname: !GetAtt 'RangerServer.Outputs.RangerAdminHost'
        RangerVersion: !Ref RangerVersion
        RangerHttpProtocol: !Ref RangerHttpProtocol
        DBHostName: !GetAtt 'RDSDatabase.Outputs.RDSInstanceAddress'
        DBUserName: !Ref DBUserName
        DBRootPassword: !Ref DBRootPassword
        RangerAdminPassword: !Ref RangerAdminPassword
        RangerAgentKeySecretName: !Ref RangerAgentKeySecretName
        RangerServerCertSecretName: !Ref RangerServerCertSecretName
        AttachAdditionalSourcePrefixToSG: !Ref AttachAdditionalSourcePrefixToSG
        CIDRAccessToPrivateSubnetResources: !Ref CIDRAccessToPrivateSubnetResources
        AdditionalSourcePrefixToSG: !Ref AdditionalSourcePrefixToSG
      TimeoutInMinutes: '60'
Outputs:
  RDSInstanceAddress:
    Description: IP Address of the RDS instance
    Value: !GetAtt 'RDSDatabase.Outputs.RDSInstanceAddress'
  RangerServerPrivateDNS:
    Value: !GetAtt 'RangerServer.Outputs.RangerAdminHost'
  HueIPAddress:
    Value: !GetAtt 'EMRCluster.Outputs.EMRClusterURL'
  EMRClusterURL:
    Description: Cluster EMR cluster MasterNode
    Value: !GetAtt 'EMRCluster.Outputs.EMRClusterURL'
